
import java.io.File;
import java.util.Scanner;

/*
 *                                                         Project Four
 * @author                                              Jeffrey Jason Stroth
 */
public class GUITree extends javax.swing.JFrame {

    
// to build the tree we need a node, a root and something to take the node off
    private BTreeNode root;  // obj from BTreeNode class
    BTreeNode temp;          //global variable 
    public int count = 0;
    
    //function to add new node
    public void addNode(String nodeValue)
    {
        temp = new BTreeNode();   //creaded an object to hold new node, then set node = root.
        temp.value = nodeValue;  // set value to new node
        if(root == null)
        {
            root = temp;
        }
        else  // if node is not empty, find next node to fill
        {
            //call recursive function to find new spot to place next value
            recursiveAdd(root);//pass root as current node. first time will create. afterward it will move left and right.
        }
    }
    private void recursiveAdd(BTreeNode currentNode)
    {
        //This funcition will increase counts for duplicates if new value is equal to current value
        int result = temp.value.compareTo(currentNode.value);
        
        if ( result < 0)     //if temp(new value) node is less than current node, move left
        {
            if(currentNode.left == null)        // if moving left to next node and theres nothing there. create it!
            {
                currentNode.left = temp;
            }
            else
                recursiveAdd(currentNode.left); // this reLoops node to continue moving left until theres a blank spot
        }
                                                //else will assume temp is greater than current node
        else if( result > 0)
        {
            if(currentNode.right == null)       // if moving right to next node and theres nothing there. create it!
            {
                currentNode.right = temp;
            }
            else
                recursiveAdd(currentNode.right); // this reLoops node to continue moving right until theres a blank spot
        }   
        else if(result == 0)
        {
            count = count +1;
        }
    }
    
    public String printOut() 
    {
        return recursivePrintOut(root);
    }
    
    public void readText()
    {
        //This function reads in each word and passes it to Tree
        // Referenced "How to read-in text" from www.stackoverflow.com
        
        Scanner scan = new Scanner("Text.txt");
        while(scan.hasNext())
        {
            String word = scan.nextLine();
            addNode(word);
        }
    }
    private String recursivePrintOut(BTreeNode currentNode)
    {
        String myValue = "";
        //if the node to the left is nonexistant. put current value on string and call right
        if(currentNode.left != null)
        {
            myValue = recursivePrintOut(currentNode.left); // This captures the node on the string, runs function again 
        }                                                  // if there is a node to the left, keep passing left till you find the end
        
        myValue += " " + currentNode.value;  //puts a space between integers captured
        
        if(currentNode.right != null)
        {
            myValue += " " + recursivePrintOut(currentNode.right); //Once every node to the left has run to the end, we move right
        }
        return myValue;       
    }
    
    /*
     * Creates new form GUITree
     */
    public GUITree() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Project Four");

        jButton1.setText("Print Results");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Press Print to see results");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel2)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String myOutPut = printOut();           //passes output to a string variable
        jTextArea1.setText(myOutPut);           // displays string 
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUITree().setVisible(true);
            }
            
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
